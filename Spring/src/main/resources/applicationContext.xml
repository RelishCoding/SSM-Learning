<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/util
       https://www.springframework.org/schema/util/spring-util.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">
    <!--bean：配置一个bean对象，将对象交给IOC容器管理
        属性：
        id：bean的唯一标识，不能重复
        class：设置bean对象所对应的类型
    -->
    <bean id="helloworld" class="com.atguigu.helloworld.pojo.HelloWorld"></bean>

    <bean id="studentOne" class="com.atguigu.ioc_xml.pojo.Student"></bean>
    <bean id="studentTwo" class="com.atguigu.ioc_xml.pojo.Student">
        <!--
            property：通过成员变量的set方法进行赋值
            name：设置需要赋值的属性名（和set方法有关）
            value：设置为属性所赋的值
        -->
        <property name="sid" value="1001"></property>
        <property name="sname" value="张三"></property>
        <property name="age" value="23"></property>
        <property name="gender" value="男"></property>
    </bean>

    <bean id="studentThree" class="com.atguigu.ioc_xml.pojo.Student">
        <constructor-arg value="1002"></constructor-arg>
        <constructor-arg value="李四"></constructor-arg>
        <constructor-arg value="女"></constructor-arg>
        <constructor-arg value="24" name="age"></constructor-arg>
    </bean>

    <bean id="studentFour" class="com.atguigu.ioc_xml.pojo.Student">
        <property name="sid" value="1003"></property>
        <!--
            <对应的实体：&lt;
            >对应的实体：&gt;
        -->
<!--        <property name="sname" value="&lt;王五&gt;"></property>-->
        <property name="sname">
            <value><![CDATA[<王五>]]></value>
        </property>
        <property name="gender">
            <null/>
        </property>
    </bean>

    <bean id="studentFive" class="com.atguigu.ioc_xml.pojo.Student">
        <property name="sid" value="1004"></property>
        <property name="sname" value="赵六"></property>
        <property name="age" value="26"></property>
        <property name="gender" value="男"></property>
        <!-- ref引用IOC容器中的某个bean的id -->
<!--        <property name="clazz" ref="clazzOne"></property>-->
        <!-- 级联的方式，要保证提前为clazz属性赋值或者实例化 -->
        <!--<property name="clazz.cid" value="2222"></property>
        <property name="clazz.cname" value="远大前程班"></property>-->
        <property name="clazz">
            <!-- 内部bean只能在当前bean的内部使用，不能直接通过IOC容器获取 -->
            <bean id="clazzInner" class="com.atguigu.ioc_xml.pojo.Clazz">
                <property name="cid" value="2222"></property>
                <property name="cname" value="远大前程班"></property>
            </bean>
        </property>
        <property name="hobby">
            <array>
                <value>抽烟</value>
                <value>喝酒</value>
                <value>烫头</value>
            </array>
        </property>
        <!--<property name="teacherMap">
            <map>
                <entry key="10086" value-ref="teacherOne"></entry>
                <entry key="10010" value-ref="teacherTwo"></entry>
            </map>
        </property>-->
        <property name="teacherMap" ref="teacherMap"></property>
    </bean>

    <bean id="clazzOne" class="com.atguigu.ioc_xml.pojo.Clazz">
        <property name="cid" value="1111"></property>
        <property name="cname" value="最强王者班"></property>
        <!--<property name="students">
            <list>
                <ref bean="studentOne"></ref>
                <ref bean="studentTwo"></ref>
                <ref bean="studentThree"></ref>
            </list>
        </property>-->
        <property name="students" ref="studentList"></property>
    </bean>

    <!-- 配置一个集合类型的bean，需要使用util的约束 -->
    <util:list id="studentList">
        <ref bean="studentOne"></ref>
        <ref bean="studentTwo"></ref>
        <ref bean="studentThree"></ref>
    </util:list>

    <bean id="teacherOne" class="com.atguigu.ioc_xml.pojo.Teacher">
        <property name="tid" value="10086"></property>
        <property name="tname" value="大宝"></property>
    </bean>

    <bean id="teacherTwo" class="com.atguigu.ioc_xml.pojo.Teacher">
        <property name="tid" value="10010"></property>
        <property name="tname" value="小宝"></property>
    </bean>

    <util:map id="teacherMap">
        <entry key="10086" value-ref="teacherOne"></entry>
        <entry key="10010" value-ref="teacherTwo"></entry>
    </util:map>

    <bean id="studentSix" class="com.atguigu.ioc_xml.pojo.Student"
        p:sid="1005" p:sname="小明" p:teacherMap-ref="teacherMap"></bean>

    <!-- 引入jdbc.properties，之后可以用过${key}的方式访问value -->
    <context:property-placeholder location="jdbc.properties"></context:property-placeholder>

    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${jdbc.driver}"></property>
        <property name="url" value="${jdbc.url}"></property>
        <property name="username" value="${jdbc.user}"></property>
        <property name="password" value="${jdbc.password}"></property>
    </bean>

    <!--
        scope：设置bean的作用域
        scope="singleton|prototype"
        singleton（单例）:表示获取该bean所对应的对象都是同一个
        singleton（多例）:表示获取该bean所对应的对象都不是同一个
    -->
    <bean id="student" class="com.atguigu.ioc_xml.pojo.Student" scope="prototype">
        <property name="sid" value="1001"></property>
        <property name="sname" value="张三"></property>
    </bean>

    <!--<bean id="user" class="com.atguigu.ioc_xml.pojo.User" init-method="initMethod" destroy-method="destroyMethod">
        <property name="id" value="1"></property>
        <property name="username" value="admin"></property>
        <property name="password" value="123456"></property>
        <property name="age" value="23"></property>
    </bean>-->

<!--    <bean id="myBeanPostProcessor" class="com.atguigu.ioc_xml.process.MyBeanPostProcessor"></bean>-->

    <bean class="com.atguigu.ioc_xml.factory.UserFactoryBean"></bean>
</beans>